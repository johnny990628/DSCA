**************** MODEL CONFIGURATION ****************
alpha                    -->   0.1
batch_size               -->   1
bins_discrete            -->   4
bp_every_iters           -->   270
cuda_id                  -->   0
dataset_name             -->   tcga_luad
dims                     -->   512-256-256-1
dropout                  -->   0.6
emb_x20_backbone         -->   capool
emb_x20_dw_conv          -->   False
emb_x20_ksize            -->   3
emb_x5_backbone          -->   conv1d
emb_x5_ksize             -->   5
epochs                   -->   150
es_patience              -->   30
es_start_epoch           -->   0
es_verbose               -->   True
es_warmup                -->   0
experiment               -->   sim
feat_format              -->   pt
fusion                   -->   fusion
join                     -->   post
label_discrete           -->   False
loss                     -->   survple
lr                       -->   1e-05
magnification            -->   [5, 10]
monitor_metrics          -->   ci
no_cuda                  -->   False
num_patch_sampling       -->   -1
num_workers              -->   4
opt                      -->   adam
opt_betas                -->   None
opt_eps                  -->   None
opt_momentum             -->   None
path_coordx5             -->   /work/u6658716/TCGA-LUAD/CLAM/PATCHES/New_LUAD/tiles-5x-s448/patches
path_data_split          -->   ./data_split/tcga_luad/tcga_luad-seed42-fold{}.npz
path_label               -->   ./data_split/tcga_luad/tcga_luad_path_full.csv
path_patchx20            -->   /work/u6658716/TCGA-LUAD/CLAM/PATCHES/New_LUAD/tiles-5x-s448/tiles-10x-s448/feats-CONCH/pt_files
path_patchx5             -->   /work/u6658716/TCGA-LUAD/CLAM/PATCHES/New_LUAD/tiles-5x-s448/feats-CONCH/pt_files
pool                     -->   gap
reg_l1                   -->   1e-05
save_path                -->   ./results-luad-hier/nllloss
save_prediction          -->   True
seed                     -->   42
seed_data_split          -->   0
task                     -->   HierSurv
tra_backbone             -->   Transformer
tra_dw_conv              -->   False
tra_epsilon              -->   0.8
tra_ksize                -->   3
tra_nhead                -->   8
tra_num_layers           -->   1
tra_position_emb         -->   True
weight_decay             -->   0.0001
**************** MODEL CONFIGURATION ****************
[setup] seed: 42
[5, 10]
Scale for magnifications [5, 10] is 2
WSIHierNet(
  (patchx20_embedding_layer): CAPoolPatchEmbedding(
    (conv_patch_x5): Conv1dPatchEmbedding(
      (conv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
    (act): ReLU(inplace=True)
    (cross_att_pool): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
    )
  )
  (patchx5_embedding_layer): Conv1dPatchEmbedding(
    (conv): Conv1d(512, 256, kernel_size=(5,), stride=(1,), padding=(2,))
    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
  )
  (patch_encoder_layer): TransformerEncoder(
    (layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (linear1): Linear(in_features=256, out_features=256, bias=True)
        (dropout): Dropout(p=0.6, inplace=False)
        (linear2): Linear(in_features=256, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.6, inplace=False)
        (dropout2): Dropout(p=0.6, inplace=False)
      )
    )
  )
  (patch_encoder_layer_parallel): TransformerEncoder(
    (layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
        )
        (linear1): Linear(in_features=256, out_features=256, bias=True)
        (dropout): Dropout(p=0.6, inplace=False)
        (linear2): Linear(in_features=256, out_features=256, bias=True)
        (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.6, inplace=False)
        (dropout2): Dropout(p=0.6, inplace=False)
      )
    )
  )
  (pool): GAPool(
    (fc1): Sequential(
      (0): Linear(in_features=256, out_features=256, bias=True)
      (1): Tanh()
      (2): Dropout(p=0.25, inplace=False)
    )
    (score): Sequential(
      (0): Linear(in_features=256, out_features=256, bias=True)
      (1): Sigmoid()
      (2): Dropout(p=0.25, inplace=False)
    )
    (fc2): Linear(in_features=256, out_features=1, bias=True)
  )
  (out_layer): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): ReLU(inplace=True)
    (2): Dropout(p=0.6, inplace=False)
    (3): Linear(in_features=128, out_features=1, bias=True)
  )
)
Total number of parameters: 3187458
Total number of trainable parameters: 3187458
[model] Transformer Position Embedding: Yes
[setup] loss: a popular PLE loss in coxph
[setup] L1 loss with coef=1e-05
[setup] optimizer: namespace(lr=1e-05, momentum=None, opt='adam', opt_betas=None, opt_eps=None, weight_decay=0.0001)
[exec] start experiment sim on HierSurv.
[exec] read patient IDs from ./data_split/tcga_luad/tcga_luad-seed42-fold0.npz
[surv label] at patient level
	min/avg/median/max time = 0.0/896.69/658.0/7248.0
	ratio of event = 0.35933806146572106
[surv label] to continuous
Class WSIPatchDataset: #Patients = 270
[surv label] at patient level
	min/avg/median/max time = 0.0/896.69/658.0/7248.0
	ratio of event = 0.35933806146572106
[surv label] to continuous
Class WSIPatchDataset: #Patients = 68
[surv label] at patient level
	min/avg/median/max time = 0.0/896.69/658.0/7248.0
	ratio of event = 0.35933806146572106
[surv label] to continuous
Class WSIPatchDataset: #Patients = 85
[training] 150 epochs, with early stopping on validation.
/home/u6658716/.local/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:60: UserWarning: The verbose parameter is deprecated. Please use get_last_lr() to access the learning rate.
  warnings.warn(
[training epoch] training batch 270, loss: 2.247016
[training] training epoch 1, avg. batch loss: 2.24701643, loss: 1.63026762, c_index: 0.46618
[training] validation epoch 1, loss: 1.16193688, c_index: 0.58482
[training] test epoch 1, loss: 1.35013008, c_index: 0.47226
Validation CIndex increased (0.000 --> 0.585).  Saving model ...
[training epoch] training batch 270, loss: 2.255525
[training] training epoch 2, avg. batch loss: 2.25552511, loss: 1.63886213, c_index: 0.48610
[training] validation epoch 2, loss: 1.16214526, c_index: 0.59040
[training] test epoch 2, loss: 1.35052347, c_index: 0.49124
Validation CIndex increased (0.585 --> 0.590).  Saving model ...
[training epoch] training batch 270, loss: 2.249759
[training] training epoch 3, avg. batch loss: 2.24975920, loss: 1.63318133, c_index: 0.49044
[training] validation epoch 3, loss: 1.16260231, c_index: 0.59263
[training] test epoch 3, loss: 1.35072732, c_index: 0.49635
Validation CIndex increased (0.590 --> 0.593).  Saving model ...
[training epoch] training batch 270, loss: 2.243572
[training] training epoch 4, avg. batch loss: 2.24357176, loss: 1.62707949, c_index: 0.46792
[training] validation epoch 4, loss: 1.16297221, c_index: 0.60603
[training] test epoch 4, loss: 1.35097516, c_index: 0.51095
Validation CIndex increased (0.593 --> 0.606).  Saving model ...
[training epoch] training batch 270, loss: 2.260083
[training] training epoch 5, avg. batch loss: 2.26008272, loss: 1.64367664, c_index: 0.52955
[training] validation epoch 5, loss: 1.16319549, c_index: 0.61272
[training] test epoch 5, loss: 1.35136878, c_index: 0.53212
Validation CIndex increased (0.606 --> 0.613).  Saving model ...
[training epoch] training batch 270, loss: 2.248512
[training] training epoch 6, avg. batch loss: 2.24851227, loss: 1.63219225, c_index: 0.47103
[training] validation epoch 6, loss: 1.16343391, c_index: 0.61942
[training] test epoch 6, loss: 1.35170865, c_index: 0.53869
Validation CIndex increased (0.613 --> 0.619).  Saving model ...
[training epoch] training batch 270, loss: 2.255775
[training] training epoch 7, avg. batch loss: 2.25577521, loss: 1.63954127, c_index: 0.51680
[training] validation epoch 7, loss: 1.16361129, c_index: 0.62388
[training] test epoch 7, loss: 1.35212767, c_index: 0.54891
Validation CIndex increased (0.619 --> 0.624).  Saving model ...
[training epoch] training batch 270, loss: 2.242053
[training] training epoch 8, avg. batch loss: 2.24205256, loss: 1.62590432, c_index: 0.48689
[training] validation epoch 8, loss: 1.16380847, c_index: 0.62723
[training] test epoch 8, loss: 1.35258532, c_index: 0.55620
Validation CIndex increased (0.624 --> 0.627).  Saving model ...
[training epoch] training batch 270, loss: 2.242100
[training] training epoch 9, avg. batch loss: 2.24210000, loss: 1.62603784, c_index: 0.46727
[training] validation epoch 9, loss: 1.16396213, c_index: 0.62835
[training] test epoch 9, loss: 1.35307372, c_index: 0.56496
Validation CIndex increased (0.627 --> 0.628).  Saving model ...
[training epoch] training batch 270, loss: 2.236111
[training] training epoch 10, avg. batch loss: 2.23611116, loss: 1.62013519, c_index: 0.51412
[training] validation epoch 10, loss: 1.16414714, c_index: 0.62388
[training] test epoch 10, loss: 1.35354328, c_index: 0.57226
EarlyStopping counter: 1 out of 30
[training epoch] training batch 270, loss: 2.229115
[training] training epoch 11, avg. batch loss: 2.22911501, loss: 1.61322570, c_index: 0.44576
[training] validation epoch 11, loss: 1.16433346, c_index: 0.62835
[training] test epoch 11, loss: 1.35401785, c_index: 0.58321
EarlyStopping counter: 2 out of 30
[training epoch] training batch 270, loss: 2.238005
[training] training epoch 12, avg. batch loss: 2.23800492, loss: 1.62220299, c_index: 0.50608
[training] validation epoch 12, loss: 1.16446269, c_index: 0.63170
[training] test epoch 12, loss: 1.35446930, c_index: 0.58759
Validation CIndex increased (0.628 --> 0.632).  Saving model ...
[training epoch] training batch 270, loss: 2.223698
[training] training epoch 13, avg. batch loss: 2.22369814, loss: 1.60798419, c_index: 0.41534
[training] validation epoch 13, loss: 1.16451657, c_index: 0.63616
[training] test epoch 13, loss: 1.35469747, c_index: 0.58832
Validation CIndex increased (0.632 --> 0.636).  Saving model ...
[training epoch] training batch 270, loss: 2.235080
[training] training epoch 14, avg. batch loss: 2.23507977, loss: 1.61940944, c_index: 0.51463
[training] validation epoch 14, loss: 1.16457474, c_index: 0.63839
[training] test epoch 14, loss: 1.35491323, c_index: 0.59051
Validation CIndex increased (0.636 --> 0.638).  Saving model ...
[training epoch] training batch 270, loss: 2.232081
[training] training epoch 15, avg. batch loss: 2.23208070, loss: 1.61645460, c_index: 0.49884
[training] validation epoch 15, loss: 1.16460907, c_index: 0.63616
[training] test epoch 15, loss: 1.35513508, c_index: 0.59124
EarlyStopping counter: 3 out of 30
[training epoch] training batch 270, loss: 2.241689
[training] training epoch 16, avg. batch loss: 2.24168944, loss: 1.62610757, c_index: 0.45901
[training] validation epoch 16, loss: 1.16459978, c_index: 0.63393
[training] test epoch 16, loss: 1.35534549, c_index: 0.59416
EarlyStopping counter: 4 out of 30
[training epoch] training batch 270, loss: 2.230751
[training] training epoch 17, avg. batch loss: 2.23075056, loss: 1.61521316, c_index: 0.43489
[training] validation epoch 17, loss: 1.16461635, c_index: 0.63281
[training] test epoch 17, loss: 1.35553420, c_index: 0.59708
EarlyStopping counter: 5 out of 30
[training epoch] training batch 270, loss: 2.238209
[training] training epoch 18, avg. batch loss: 2.23820877, loss: 1.62271607, c_index: 0.50188
[training] validation epoch 18, loss: 1.16462219, c_index: 0.63170
[training] test epoch 18, loss: 1.35572469, c_index: 0.59927
EarlyStopping counter: 6 out of 30
[training epoch] training batch 270, loss: 2.232434
[training] training epoch 19, avg. batch loss: 2.23243427, loss: 1.61698627, c_index: 0.46422
[training] validation epoch 19, loss: 1.16462386, c_index: 0.63281
[training] test epoch 19, loss: 1.35591793, c_index: 0.60292
EarlyStopping counter: 7 out of 30
[training epoch] training batch 270, loss: 2.240006
[training] training epoch 20, avg. batch loss: 2.24000597, loss: 1.62460256, c_index: 0.48863
[training] validation epoch 20, loss: 1.16458428, c_index: 0.63170
[training] test epoch 20, loss: 1.35609806, c_index: 0.60657
EarlyStopping counter: 8 out of 30
[training epoch] training batch 270, loss: 2.238344
[training] training epoch 21, avg. batch loss: 2.23834372, loss: 1.62298477, c_index: 0.50731
[training] validation epoch 21, loss: 1.16455591, c_index: 0.63393
[training] test epoch 21, loss: 1.35625792, c_index: 0.60949
EarlyStopping counter: 9 out of 30
[training epoch] training batch 270, loss: 2.238269
[training] training epoch 22, avg. batch loss: 2.23826933, loss: 1.62295508, c_index: 0.51485
[training] validation epoch 22, loss: 1.16455340, c_index: 0.63058
[training] test epoch 22, loss: 1.35639167, c_index: 0.60803
EarlyStopping counter: 10 out of 30
[training epoch] training batch 270, loss: 2.236034
[training] training epoch 23, avg. batch loss: 2.23603368, loss: 1.62076390, c_index: 0.46603
[training] validation epoch 23, loss: 1.16451526, c_index: 0.62835
[training] test epoch 23, loss: 1.35653126, c_index: 0.61241
EarlyStopping counter: 11 out of 30
[training epoch] training batch 270, loss: 2.236074
[training] training epoch 24, avg. batch loss: 2.23607421, loss: 1.62084901, c_index: 0.47654
[training] validation epoch 24, loss: 1.16449726, c_index: 0.62723
[training] test epoch 24, loss: 1.35659742, c_index: 0.61241
EarlyStopping counter: 12 out of 30
[training epoch] training batch 270, loss: 2.230102
[training] training epoch 25, avg. batch loss: 2.23010159, loss: 1.61489880, c_index: 0.46676
[training] validation epoch 25, loss: 1.16447926, c_index: 0.62723
[training] test epoch 25, loss: 1.35666943, c_index: 0.61387
EarlyStopping counter: 13 out of 30
[training epoch] training batch 270, loss: 2.239306
[training] training epoch 26, avg. batch loss: 2.23930597, loss: 1.62412560, c_index: 0.50471
[training] validation epoch 26, loss: 1.16446674, c_index: 0.62388
[training] test epoch 26, loss: 1.35673726, c_index: 0.61460
EarlyStopping counter: 14 out of 30
[training epoch] training batch 270, loss: 2.233998
[training] training epoch 27, avg. batch loss: 2.23399806, loss: 1.61884010, c_index: 0.48494
[training] validation epoch 27, loss: 1.16445327, c_index: 0.62277
[training] test epoch 27, loss: 1.35679042, c_index: 0.61606
EarlyStopping counter: 15 out of 30
[training epoch] training batch 270, loss: 2.236663
[training] training epoch 28, avg. batch loss: 2.23666310, loss: 1.62152743, c_index: 0.48436
[training] validation epoch 28, loss: 1.16443694, c_index: 0.62277
[training] test epoch 28, loss: 1.35684025, c_index: 0.61606
EarlyStopping counter: 16 out of 30
[training epoch] training batch 270, loss: 2.227517
[training] training epoch 29, avg. batch loss: 2.22751665, loss: 1.61240315, c_index: 0.50731
[training] validation epoch 29, loss: 1.16442382, c_index: 0.62054
[training] test epoch 29, loss: 1.35689688, c_index: 0.61752
EarlyStopping counter: 17 out of 30
[training epoch] training batch 270, loss: 2.232431
[training] training epoch 30, avg. batch loss: 2.23243141, loss: 1.61734056, c_index: 0.50065
[training] validation epoch 30, loss: 1.16442120, c_index: 0.62054
[training] test epoch 30, loss: 1.35695553, c_index: 0.61606
EarlyStopping counter: 18 out of 30
[training epoch] training batch 270, loss: 2.233069
[training] training epoch 31, avg. batch loss: 2.23306894, loss: 1.61800015, c_index: 0.44858
[training] validation epoch 31, loss: 1.16441393, c_index: 0.62054
[training] test epoch 31, loss: 1.35700822, c_index: 0.61606
EarlyStopping counter: 19 out of 30
[training epoch] training batch 270, loss: 2.242407
[training] training epoch 32, avg. batch loss: 2.24240732, loss: 1.62736118, c_index: 0.53281
[training] validation epoch 32, loss: 1.16440606, c_index: 0.61942
[training] test epoch 32, loss: 1.35706532, c_index: 0.61825
EarlyStopping counter: 20 out of 30
[training epoch] training batch 270, loss: 2.225222
[training] training epoch 33, avg. batch loss: 2.22522235, loss: 1.61019850, c_index: 0.42367
[training] validation epoch 33, loss: 1.16440237, c_index: 0.62054
[training] test epoch 33, loss: 1.35714436, c_index: 0.62117
EarlyStopping counter: 21 out of 30
[training epoch] training batch 270, loss: 2.229384
[training] training epoch 34, avg. batch loss: 2.22938371, loss: 1.61438251, c_index: 0.47820
[training] validation epoch 34, loss: 1.16437829, c_index: 0.62054
[training] test epoch 34, loss: 1.35722578, c_index: 0.62190
EarlyStopping counter: 22 out of 30
[training epoch] training batch 270, loss: 2.232595
[training] training epoch 35, avg. batch loss: 2.23259544, loss: 1.61761677, c_index: 0.50355
[training] validation epoch 35, loss: 1.16436994, c_index: 0.62054
[training] test epoch 35, loss: 1.35726678, c_index: 0.62190
EarlyStopping counter: 23 out of 30
[training epoch] training batch 270, loss: 2.236469
[training] training epoch 36, avg. batch loss: 2.23646879, loss: 1.62150097, c_index: 0.49232
[training] validation epoch 36, loss: 1.16436219, c_index: 0.62165
[training] test epoch 36, loss: 1.35730958, c_index: 0.62117
EarlyStopping counter: 24 out of 30
[training epoch] training batch 270, loss: 2.226732
[training] training epoch 37, avg. batch loss: 2.22673202, loss: 1.61177576, c_index: 0.42939
[training] validation epoch 37, loss: 1.16435516, c_index: 0.62054
[training] test epoch 37, loss: 1.35736156, c_index: 0.62117
EarlyStopping counter: 25 out of 30
[training epoch] training batch 270, loss: 2.233786
[training] training epoch 38, avg. batch loss: 2.23378563, loss: 1.61884069, c_index: 0.51347
[training] validation epoch 38, loss: 1.16434813, c_index: 0.61830
[training] test epoch 38, loss: 1.35741758, c_index: 0.62190
EarlyStopping counter: 26 out of 30
[training epoch] training batch 270, loss: 2.230596
[training] training epoch 39, avg. batch loss: 2.23059607, loss: 1.61566246, c_index: 0.49964
[training] validation epoch 39, loss: 1.16434085, c_index: 0.62054
[training] test epoch 39, loss: 1.35746944, c_index: 0.62117
EarlyStopping counter: 27 out of 30
[training epoch] training batch 270, loss: 2.230029
[training] training epoch 40, avg. batch loss: 2.23002887, loss: 1.61510658, c_index: 0.46451
[training] validation epoch 40, loss: 1.16433442, c_index: 0.62054
[training] test epoch 40, loss: 1.35752201, c_index: 0.62190
EarlyStopping counter: 28 out of 30
[training epoch] training batch 270, loss: 2.230954
[training] training epoch 41, avg. batch loss: 2.23095393, loss: 1.61604297, c_index: 0.51695
[training] validation epoch 41, loss: 1.16433024, c_index: 0.61942
[training] test epoch 41, loss: 1.35756791, c_index: 0.62263
EarlyStopping counter: 29 out of 30
[training epoch] training batch 270, loss: 2.224157
[training] training epoch 42, avg. batch loss: 2.22415709, loss: 1.60925746, c_index: 0.44844
[training] validation epoch 42, loss: 1.16433334, c_index: 0.62165
[training] test epoch 42, loss: 1.35761571, c_index: 0.62263
EarlyStopping counter: 30 out of 30
/work/u6658716/TCGA-LUAD/DSCA/model/model_handler.py:270: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(checkpoint))
(270, 1) (270, 1)
/work/u6658716/TCGA-LUAD/DSCA/model/model_handler.py:270: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(checkpoint))
(68, 1) (68, 1)
/work/u6658716/TCGA-LUAD/DSCA/model/model_handler.py:270: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(checkpoint))
(85, 1) (85, 1)
[INFO] Metrics: {'train': [('cindex', 0.46625144843568944), ('loss', tensor(1.6124))], 'validation': [('cindex', 0.6383928571428571), ('loss', tensor(1.1646))], 'test': [('cindex', 0.5905109489051095), ('loss', tensor(1.3549))]}
